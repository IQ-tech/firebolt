name: release prod
on:
  # When Release Pull Request is merged
  pull_request:
    branches:
      - latest
    types: [closed]

permissions:
  contents: write # for checkout and tag
  pull-requests: write # for comments
  packages: write # for publish

jobs:
  publish:
    if: github.event.pull_request.merged == true
    name: Publish
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.IQ_ADM_TIM_TOKEN }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup npm env
        run: |
         echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
         npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install
        run: yarn install
      - name: Setup lerna
        run: yarn bootstrap
      - name: Build libs
        run: yarn build:libs
      - name: bump version
        run: yarn versionup
        env: 
          GH_TOKEN: ${{ secrets.IQ_ADM_TIM_TOKEN }}
      - name: Set Current Version
        run: |
          CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
      - name: Publish
        run: yarn publish:libs
        env: 
          GH_TOKEN: ${{ secrets.IQ_ADM_TIM_TOKEN}}
      - uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'https://github.com/${{ github.repository }}/releases/tag/v${{ env.CURRENT_VERSION }} is released ðŸŽ‰'
            })
      - name: Update main branch 
        run: |
          git checkout main
          git merge latest -m "chore: updated main branch (merged latest into main)"
          git push origin main

