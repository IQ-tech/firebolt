name: Check Version Bump

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Get Lerna version from PR branch
        id: pr
        run: |
          version=$(jq -r .version lerna.json)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "PR_VERSION=$version" >> $GITHUB_ENV

      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Get Lerna version from main
        id: main
        run: |
          version=$(jq -r .version lerna.json)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "MAIN_VERSION=$version" >> $GITHUB_ENV

      - name: Compare versions and comment if invalid
        run: |
          if printf "%s\n%s" "$MAIN_VERSION" "$PR_VERSION" | sort -V | head -n1 | grep -q "$PR_VERSION"; then
            echo -e "⚠️ A versão do lerna.json no PR ($PR_VERSION) não é válida.\n\nEla deve ser **MAIOR** que a versão atual da main ($MAIN_VERSION).\n\nPor favor, atualize sua branch com a main e rode o seguinte comando para corrigir:\n\nyarn version:patch" > comment.txt
            gh issue comment ${{ github.event.pull_request.number }} --body-file comment.txt
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fail if version not bumped
        run: |
          if printf "%s\n%s" "$MAIN_VERSION" "$PR_VERSION" | sort -V | head -n1 | grep -q "$PR_VERSION"; then
            echo "A versão do lerna.json no PR não é válida. Atualize sua branch com a main e rode o comando 'yarn version:patch'."
            exit 1
          fi
